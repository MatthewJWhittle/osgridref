30	SZ
40	TV
50	TW
60	TX
70"
tokens <- string %>% str_split("\t|\n") %>% unlist()
letters <- tokens[seq(1, length(tokens), by = 2)]
numbers <- tokens[seq(2, length(tokens), by = 2)]
xy  <- case_when(nchar(numbers) == 2 ~ str_split(numbers, n = 2, pattern = ""),
nchar(numbers) > 2 ~ str_split(numbers, n = 2, pattern = " "),
) %>% lapply(as.numeric)
xy <- do.call(rbind, xy)
colnames(xy) <- c("x", "y")
square_lookup <- as_tibble(xy) %>% mutate(square_letters = letters)
usethis::use_data(square_lookup, overwrite = TRUE)
x <- 532564
y <- 325859
x <- c(532564, 546643)
y <- c(325859, 367053)
devtools::load_all()
devtools::load_all()
x <- c(532564, 546643)
y <- c(325859, 367053)
osgb_lookup()
tibble(x, y)
lookup_bbox <-
lookup %>%
mutate(
xmin = paste0(x, "00000") %>% as.numeric(),
ymin = paste0(y, "00000") %>% as.numeric(),
xmax = xmin + 100000,
ymax = ymin + 100000
)
lookup <- osgb_lookup()
lookup_bbox <-
lookup %>%
mutate(
xmin = paste0(x, "00000") %>% as.numeric(),
ymin = paste0(y, "00000") %>% as.numeric(),
xmax = xmin + 100000,
ymax = ymin + 100000
)
lookup_bbox
x <- c(532564, 546643)
y <- c(325859, 367053)
xy_to_gridref <- function(x,y){}
lookup <- osgb_lookup()
lookup_bbox <-
lookup %>%
mutate(
xmin = paste0(x, "00000") %>% as.numeric(),
ymin = paste0(y, "00000") %>% as.numeric(),
xmax = xmin + 100000,
ymax = ymin + 100000
)
lookup_bbox
lookup_bbox <-
lookup %>%
mutate(
xmin = paste0(x, "00000") %>% as.numeric(),
ymin = paste0(y, "00000") %>% as.numeric(),
xmax = xmin + 100000,
ymax = ymin + 100000
)
lookup_bbox
lookup_bbox <-
lookup %>%
mutate(
xmin = paste0(x, "00000") %>% as.numeric(),
ymin = paste0(y, "00000") %>% as.numeric(),
xmax = xmin + 100000,
ymax = ymin + 100000
)
# This is returning two squares for a coord
letters <-
lapply(seq_along(coord_x), function(i) {
match <-
coord_x[i] >= lookup_bbox$xmin &
coord_x[i] < lookup_bbox$xmax &
coord_y[i] >= lookup_bbox$ymin &
coord_y[i] < lookup_bbox$ymax
#print(paste0(i, "-", which(match)))
lookup_bbox$square_letters[which(match)]
}) %>% unlist()
coord_x
x
lookup
coord_y <- c(325859, 367053)
coord_x <- c(532564, 546643)
coord_y <- c(325859, 367053)
xy_to_gridref <- function(x, y) {
}
lookup <- osgb_lookup()
lookup_bbox <-
lookup %>%
mutate(
xmin = paste0(x, "00000") %>% as.numeric(),
ymin = paste0(y, "00000") %>% as.numeric(),
xmax = xmin + 100000,
ymax = ymin + 100000
)
lookup_bbox <-
lookup %>%
mutate(
xmin = paste0(x, "00000") %>% as.numeric(),
ymin = paste0(y, "00000") %>% as.numeric(),
xmax = xmin + 100000,
ymax = ymin + 100000
)
# This is returning two squares for a coord
letters <-
lapply(seq_along(coord_x), function(i) {
match <-
coord_x[i] >= lookup_bbox$xmin &
coord_x[i] < lookup_bbox$xmax &
coord_y[i] >= lookup_bbox$ymin &
coord_y[i] < lookup_bbox$ymax
#print(paste0(i, "-", which(match)))
lookup_bbox$square_letters[which(match)]
}) %>% unlist()
letters
conversion_table <-
tibble(coord_x = coord_x,
coord_y = coord_y,
letters = letters) %>%
left_join(lookup_bbox, by = c("letters" = "square_letters")) %>%
mutate(
out_x = substr(coord_x, nchar(x) + 1, stop  = (digits  / 2) + 1),
out_y = substr(coord_y, nchar(x) + 1, stop  = (digits  / 2) + 1),
osgb = paste0(letters, out_x, out_y)
)
tibble(coord_x = coord_x,
coord_y = coord_y,
letters = letters)
tibble(coord_x = coord_x,
coord_y = coord_y,
letters = letters) %>%
left_join(lookup_bbox, by = c("letters" = "square_letters"))
tibble(coord_x = coord_x,
coord_y = coord_y,
letters = letters) %>%
left_join(lookup_bbox, by = c("letters" = "square_letters")) %>%
mutate(
out_x = substr(coord_x, nchar(x) + 1, stop  = (digits  / 2) + 1),
out_y = substr(coord_y, nchar(x) + 1, stop  = (digits  / 2) + 1),
osgb = paste0(letters, out_x, out_y)
)
digits <- 10
conversion_table <-
tibble(coord_x = coord_x,
coord_y = coord_y,
letters = letters) %>%
left_join(lookup_bbox, by = c("letters" = "square_letters")) %>%
mutate(
out_x = substr(coord_x, nchar(x) + 1, stop  = (digits  / 2) + 1),
out_y = substr(coord_y, nchar(x) + 1, stop  = (digits  / 2) + 1),
osgb = paste0(letters, out_x, out_y)
)
conversion_table
coord_x
rm(list = ls())
devtools::load_all()
coord_x <- c(532564, 546643)
coord_y <- c(325859, 367053)
xy_to_gridref <- function(x, y) {
}
lookup <- osgb_lookup()
lookup_bbox <-
lookup %>%
mutate(
xmin = paste0(x, "00000") %>% as.numeric(),
ymin = paste0(y, "00000") %>% as.numeric(),
xmax = xmin + 100000,
ymax = ymin + 100000
)
lookup_bbox <-
lookup %>%
mutate(
xmin = paste0(x, "00000") %>% as.numeric(),
ymin = paste0(y, "00000") %>% as.numeric(),
xmax = xmin + 100000,
ymax = ymin + 100000
)
# This is returning two squares for a coord
letters <-
lapply(seq_along(x), function(i) {
match <-
x[i] >= lookup_bbox$xmin &
x[i] < lookup_bbox$xmax &
y[i] >= lookup_bbox$ymin &
y[i] < lookup_bbox$ymax
#print(paste0(i, "-", which(match)))
lookup_bbox$square_letters[which(match)]
}) %>% unlist()
rm(list = ls())
devtools::load_all()
x <- c(532564, 546643)
y <- c(325859, 367053)
xy_to_gridref <- function(x, y) {
}
lookup <- osgb_lookup()
lookup_bbox <-
lookup %>%
mutate(
xmin = paste0(x, "00000") %>% as.numeric(),
ymin = paste0(y, "00000") %>% as.numeric(),
xmax = xmin + 100000,
ymax = ymin + 100000
)
lookup_bbox <-
lookup %>%
mutate(
xmin = paste0(x, "00000") %>% as.numeric(),
ymin = paste0(y, "00000") %>% as.numeric(),
xmax = xmin + 100000,
ymax = ymin + 100000
)
# This is returning two squares for a coord
letters <-
lapply(seq_along(x), function(i) {
match <-
x[i] >= lookup_bbox$xmin &
x[i] < lookup_bbox$xmax &
y[i] >= lookup_bbox$ymin &
y[i] < lookup_bbox$ymax
#print(paste0(i, "-", which(match)))
lookup_bbox$square_letters[which(match)]
}) %>% unlist()
digits <- 10
conversion_table <-
tibble(coord_x = x,
coord_y = y,
letters = letters) %>%
left_join(lookup_bbox, by = c("letters" = "square_letters")) %>%
mutate(
out_x = substr(coord_x, nchar(x) + 1, stop  = (digits  / 2) + 1),
out_y = substr(coord_y, nchar(x) + 1, stop  = (digits  / 2) + 1),
osgb = paste0(letters, out_x, out_y)
)
conversion_table$osgb
} else{
return(unique(conversion_table$osgb))
}
}
conversion_table <-
tibble(coord_x = x,
coord_y = y,
letters = letters) %>%
left_join(lookup_bbox, by = c("letters" = "square_letters")) %>%
mutate(
out_x = substr(coord_x, nchar(x) + 1, stop  = (digits  / 2) + 1),
out_y = substr(coord_y, nchar(x) + 1, stop  = (digits  / 2) + 1),
osgb = paste(letters, out_x, out_y)
)
conversion_table$osgb
} else{
rm(list = ls())
devtools::load_all()
x <- c(532564, 546643)
y <- c(325859, 367053)
xy_to_gridref <- function(x, y) {
}
lookup <- osgb_lookup()
lookup_bbox <-
lookup %>%
mutate(
xmin = paste0(x, "00000") %>% as.numeric(),
ymin = paste0(y, "00000") %>% as.numeric(),
xmax = xmin + 100000,
ymax = ymin + 100000
)
lookup_bbox <-
lookup %>%
mutate(
xmin = paste0(x, "00000") %>% as.numeric(),
ymin = paste0(y, "00000") %>% as.numeric(),
xmax = xmin + 100000,
ymax = ymin + 100000
)
# This is returning two squares for a coord
letters <-
lapply(seq_along(x), function(i) {
match <-
x[i] >= lookup_bbox$xmin &
x[i] < lookup_bbox$xmax &
y[i] >= lookup_bbox$ymin &
y[i] < lookup_bbox$ymax
#print(paste0(i, "-", which(match)))
lookup_bbox$square_letters[which(match)]
}) %>% unlist()
digits <- 10
conversion_table <-
tibble(coord_x = x,
coord_y = y,
letters = letters) %>%
left_join(lookup_bbox, by = c("letters" = "square_letters")) %>%
mutate(
out_x = substr(coord_x, nchar(x) + 1, stop  = (digits  / 2) + 1),
out_y = substr(coord_y, nchar(x) + 1, stop  = (digits  / 2) + 1),
osgb = paste(letters, out_x, out_y)
)
conversion_table$osgb
# Work out which square each grid ref is within and return the letters
letters <-
lapply(seq_along(x), function(i) {
match <-
x[i] >= lookup_bbox$xmin &
x[i] < lookup_bbox$xmax &
y[i] >= lookup_bbox$ymin &
y[i] < lookup_bbox$ymax
#print(paste0(i, "-", which(match)))
lookup_bbox$square_letters[which(match)]
}) %>% unlist()
letters
conversion_table
xy_to_gridref <- function(x, y, digits = 10) {
if(digits %% 2 != 0){stop("digits must be even")}
stopifnot(length(x) == length(y))
if(digits > 10){
warning("Digits must be <= 10. Automatically changing to 10")
digits <- 10
}
# Load the lookup table
lookup <- osgb_lookup()
# Define bounding boxes from the lookup table to compare with grid references
lookup_bbox <-
lookup %>%
mutate(
xmin = paste0(x, "00000") %>% as.numeric(),
ymin = paste0(y, "00000") %>% as.numeric(),
xmax = xmin + 100000,
ymax = ymin + 100000
)
# Work out which square each grid ref is within and return the letters
letters <-
lapply(seq_along(x), function(i) {
match <-
x[i] >= lookup_bbox$xmin &
x[i] < lookup_bbox$xmax &
y[i] >= lookup_bbox$ymin &
y[i] < lookup_bbox$ymax
#print(paste0(i, "-", which(match)))
lookup_bbox$square_letters[which(match)]
}) %>% unlist()
# make the coordinates into an xy and join the square lookup
conversion_table <-
tibble(coord_x = x,
coord_y = y,
letters = letters) %>%
left_join(lookup_bbox, by = c("letters" = "square_letters")) %>%
# remove the first digit from each coordinate and remove any digits from the end
mutate(
out_x = substr(coord_x, nchar(x) + 1, stop  = (digits  / 2) + 1),
out_y = substr(coord_y, nchar(x) + 1, stop  = (digits  / 2) + 1),
osgb = paste(letters, out_x, out_y)
)
conversion_table$osgb
}
check()
devtools::check()
document()
require(devtools)
document()
square_lookup
document()
check()
square_lookup
rm(list = ls())
load_all()
square_lookup
document()
check()
check()
require(osgridref)
osgb_lookup()
check()
document()
check()
check()
library(osgridref)
grid_refs <- c("TA 304 403", "SE 2344 0533", "SE13", "SE 23444 05334")
# Returns a tibble of X and Y coords and their resolution
xy <- gridref_to_xy(grid_refs)
# Returns a tibble of X and Y coords and their resolution
xy_table <- gridref_to_xy(grid_refs)
xy_to_gridref(xy_table)
xy_to_gridref(x = xy_table$x, y = xy_table$y, digits = 10)
xy_to_gridref(x = xy_table$x, y = xy_table$y, digits = 4)
xy_table$y
xy_table$x
x = xy_table$x
xy_table$y
y = xy_table$y
if(digits %% 2 != 0){stop("digits must be even")}
digits = 10
if(digits %% 2 != 0){stop("digits must be even")}
stopifnot(length(x) == length(y))
if(digits > 10){
warning("Digits must be <= 10. Automatically changing to 10")
digits <- 10
}
# Load the lookup table
lookup <- osgb_lookup()
# Define bounding boxes from the lookup table to compare with grid references
lookup_bbox <-
lookup %>%
mutate(
xmin = paste0(.data$x, "00000") %>% as.numeric(),
ymin = paste0(.data$y, "00000") %>% as.numeric(),
xmax = .data$xmin + 100000,
ymax = .data$ymin + 100000
)
# Work out which square each grid ref is within and return the letters
letters <-
lapply(seq_along(x), function(i) {
match <-
x[i] >= lookup_bbox$xmin &
x[i] < lookup_bbox$xmax &
y[i] >= lookup_bbox$ymin &
y[i] < lookup_bbox$ymax
#print(paste0(i, "-", which(match)))
lookup_bbox$square_letters[which(match)]
}) %>% unlist()
# make the coordinates into an xy and join the square lookup
conversion_table <-
tibble(coord_x = x,
coord_y = y,
letters = letters) %>%
left_join(lookup_bbox, by = c("letters" = "square_letters")) %>%
# remove the first digit from each coordinate and remove any digits from the end
mutate(
out_x = substr(.data$coord_x, nchar(.data$x) + 1, stop  = (.data$digits  / 2) + 1),
out_y = substr(.data$coord_y, nchar(.data$x) + 1, stop  = (.data$digits  / 2) + 1),
# Paste the components together with a space seperating them
osgb = paste(.data$letters, .data$out_x, .data$out_y)
)
ibble(coord_x = x,
coord_y = y,
letters = letters)
tibble(coord_x = x,
coord_y = y,
letters = letters)
tibble(coord_x = x,
coord_y = y,
letters = letters) %>%
left_join(lookup_bbox, by = c("letters" = "square_letters"))
tibble(coord_x = x,
coord_y = y,
letters = letters) %>%
left_join(lookup_bbox, by = c("letters" = "square_letters")) %>%
# remove the first digit from each coordinate and remove any digits from the end
mutate(
out_x = substr(.data$coord_x, nchar(.data$x) + 1, stop  = (.data$digits  / 2) + 1),
out_y = substr(.data$coord_y, nchar(.data$x) + 1, stop  = (.data$digits  / 2) + 1),
# Paste the components together with a space seperating them
osgb = paste(.data$letters, .data$out_x, .data$out_y)
)
lookup %>%
mutate(
xmin = paste0(x, "00000") %>% as.numeric(),
ymin = paste0(y, "00000") %>% as.numeric(),
xmax = xmin + 100000,
ymax = ymin + 100000
)
# Define bounding boxes from the lookup table to compare with grid references
lookup_bbox <-
lookup %>%
mutate(
xmin = paste0(x, "00000") %>% as.numeric(),
ymin = paste0(y, "00000") %>% as.numeric(),
xmax = xmin + 100000,
ymax = ymin + 100000
)
# Work out which square each grid ref is within and return the letters
letters <-
lapply(seq_along(x), function(i) {
match <-
x[i] >= lookup_bbox$xmin &
x[i] < lookup_bbox$xmax &
y[i] >= lookup_bbox$ymin &
y[i] < lookup_bbox$ymax
#print(paste0(i, "-", which(match)))
lookup_bbox$square_letters[which(match)]
}) %>% unlist()
# make the coordinates into an xy and join the square lookup
conversion_table <-
tibble(coord_x = x,
coord_y = y,
letters = letters) %>%
left_join(lookup_bbox, by = c("letters" = "square_letters")) %>%
# remove the first digit from each coordinate and remove any digits from the end
mutate(
out_x = substr(coord_x, nchar(x) + 1, stop  = (digits  / 2) + 1),
out_y = substr(coord_y, nchar(x) + 1, stop  = (digits  / 2) + 1),
# Paste the components together with a space seperating them
osgb = paste(letters, out_x, out_y)
)
conversion_table
load_all()
library(osgridref)
grid_refs <- c("TA 304 403", "SE 2344 0533", "SE13", "SE 23444 05334")
# Returns a tibble of X and Y coords and their resolution
xy_table <- gridref_to_xy(grid_refs)
xy_to_gridref(x = xy_table$x, y = xy_table$y, digits = 4)
xy_to_gridref(x = xy_table$x, y = xy_table$y, digits = 6)
xy_to_gridref(x = xy_table$x, y = xy_table$y, digits = 8)
xy_to_gridref(x = xy_table$x, y = xy_table$y, digits = 10)
xy_to_gridref(x = xy_table$x, y = xy_table$y, digits = 12)
xy_to_gridref(x = xy_table$x, y = xy_table$y, digits = 10)
xy_to_gridref(x = xy_table$x, y = xy_table$y, digits = 6)
xy_to_gridref(x = xy_table$x, y = xy_table$y, digits = 8)
xy_table$x
